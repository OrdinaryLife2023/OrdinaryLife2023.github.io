{
    "version": "https://jsonfeed.org/version/1",
    "title": "过个平凡的一生",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "life is a fucking movie",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/hello-world/",
            "url": "http://example.com/hello-world/",
            "title": "hello",
            "date_published": "2023-10-31T15:46:37.617Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/theme-shoka-doc/",
            "url": "http://example.com/theme-shoka-doc/",
            "title": "Hexo主题Shoka & multi-markdown-it渲染器使用说明",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>跳票 N 久终于更新的简单的使用说明</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span> ：本博客自用的主题</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span>：配套的 markdown 渲染器</li>\n</ul>\n<p>已经支持 hexo 5。</p>\n</div>\n<div class=\"note info\">\n<p>因博主被学业和工作掏空，本项目已停滞更新大半年，问题也无法及时回复大家，这个悲惨状态可能还要持续半年的样子。</p>\n<p>有很多热心小伙伴在评论区或者项目 issue 帮忙回答问题，非常非常感谢！</p>\n<p>本项目是完全开源的，也有做一些 example 示例，大家可以随便拿随便改。<br />\n但是很抱歉，博主我暂时不能提供更多的支持，这个写的乱七八糟的文档，暂时也没有时间把它写得更专业一些。<br />\n非常对不住大家！</p>\n<p>iconfont 的添加申请，我看到留言后会尽快加上，希望各位小伙伴能看到。</p>\n</div>\n<div class=\"note warning\">\n<p>当前版本更新至 0.2.5，<a href=\"#%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95\">更新记录点此</a></p>\n</div>\n<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\"><strong>🚀快速开始</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"设计缘由\"><a class=\"anchor\" href=\"#设计缘由\">#</a> 设计缘由</h1>\n<p>前几年在 Bear 和 Evernote 上整理了大量笔记，非常喜欢 Bear 默认的 markdown 渲染样式。<br />\n后来因为换了安卓手机，用不了 Bear，四处搜寻替代品，没有满意的。<br />\n然后阴差阳错知道了 Hexo，又得知 Github 也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在 Github Pages。</p>\n<p>因为这个博客是用来记笔记的，故起名 <code>书架</code> 。<br />\n对应的主题即 <code>Theme.Shoka</code> ，可以说是为了笔记阅读而生的主题。<br />\n样式严重参考 Bear，部分代码严重参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQv\"> NexT</span>。</p>\n<p>Hexo 的默认及常用渲染器均使用 <code>highlight.js</code>  进行代码高亮，而我喜欢 <code>Prism.js</code> ，故重写了一个渲染器配合主题食用。<br />\n渲染器取名 <code>multi</code> ，因为集成了很多很多很多 <code>markdown-it</code>  插件，以及压缩静态文件的功能。<br />\n（最新版的默认渲染器也支持 <code>Prism.js</code>  了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>\n<p>墙内 Github Pages 访问速度时而感人，所以用了<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc2RlbGl2ci5jb20v\"> jsDelivr</span> 加速，主要是因为它可以按需合并依赖文件。</p>\n<h1 id=\"快速安装\"><a class=\"anchor\" href=\"#快速安装\">#</a> 快速安装</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cd your-blog</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><p>打开主题目录，内有 <code>example</code>  文件夹，提供了配置文件的 demo 供参考。</p>\n<h1 id=\"安装依赖插件\"><a class=\"anchor\" href=\"#安装依赖插件\">#</a> 安装依赖插件</h1>\n<p>在应用主题之前，必须至少安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span> 渲染插件 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span>。</p>\n<p><a href=\"dependents/\">插件安装与配置教程戳此</a></p>\n<h1 id=\"应用主题\"><a class=\"anchor\" href=\"#应用主题\">#</a> 应用主题</h1>\n<h2 id=\"修改站点配置\"><a class=\"anchor\" href=\"#修改站点配置\">#</a> 修改站点配置</h2>\n<p>修改站点配置文件 <code>&lt;root&gt;/_config.yml</code> ，把主题改为  <code>shoka</code></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr></table></figure><h2 id=\"修改主题配置\"><a class=\"anchor\" href=\"#修改主题配置\">#</a> 修改主题配置</h2>\n<p>主题配置的所有参数在 <code>&lt;root&gt;/themes/shoka/_config.yml</code>  文件中。</p>\n<p>为了方便主题升级，请在根目录新建一个 yml 文件，命名为 <code>_config.shoka.yml</code> 。<br />\n也就是说，所有主题的自定义配置均保存于 <code>&lt;root&gt;/_config.shoka.yml</code>  文件。</p>\n<p><a href=\"config/\">主题的基础配置可以参考这里</a><br />\n<a href=\"display/\">界面显示相关的配置参考这里</a></p>\n<h1 id=\"更新记录\"><a class=\"anchor\" href=\"#更新记录\">#</a> 更新记录</h1>\n<p>标签含义：<br />\n❗ 需要手动操作的更新信息<br />\n⚠️ 需要注意的更新信息<br />\n🔧 已修复的问题<br />\n⌛ TODO</p>\n<h2 id=\"024-025\"><a class=\"anchor\" href=\"#024-025\">#</a> 0.2.4 👉 0.2.5</h2>\n<p>💡  避免直接修改主题文件，添加各种自定义：</p>\n<ul>\n<li><a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E9%85%8D%E8%89%B2\">样式</a>：包括配色、<a href=\"config/#iconfont%E5%9B%BE%E6%A0%87\">icon</a>、其他自定义样式</li>\n<li>图片：包括<a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87\">主题图片</a>、<a href=\"config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库</a></li>\n</ul>\n<p>🔧 修复一些 BUG</p>\n<h2 id=\"023-024\"><a class=\"anchor\" href=\"#023-024\">#</a> 0.2.3 👉 0.2.4</h2>\n<p>⚠️ <strong>评论功能更新</strong></p>\n<ul>\n<li>MiniValine 魔改版更新至 beta10，修改过主题默认 <code>_config.yml</code>  的同学，记得更新末尾的 <code>vendors</code>  到最新哦</li>\n<li>❗ 评论相关的配置有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a>\n<ul>\n<li>主要增加的 Tag 配置，现在可以各种自定义啦</li>\n</ul>\n</li>\n</ul>\n<p>⚠️ 配置新增</p>\n<ul>\n<li>夜间模式 <code>darkmode</code> ，<a href=\"config/#%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F\">配置戳此</a></li>\n<li>自动定位 <code>auto_scroll</code> ，<a href=\"config/#%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D\">配置戳此</a></li>\n<li>图床 API 设置 <code>image_server</code> ，<a href=\"config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">配置戳此</a></li>\n</ul>\n<p>⚠️ 背景音乐功能增强，<a href=\"config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90\">配置戳此</a></p>\n<ul>\n<li>可以添加多个播放列表</li>\n<li>加了一些控制按钮</li>\n</ul>\n<p>⚠️ 增加 <code>media</code>  标签，在文章中插入音频和视频播放列表，<a href=\"special/#media%E5%A4%9A%E5%AA%92%E4%BD%93\">方法戳此</a><br />\n⌛  视频播放器有待增强（显示分段标签，字幕）</p>\n<p>🔧 随机图库支持非渣浪图床的任意图片<br />\n🔧 还有许多小 BUG</p>\n<h2 id=\"022-023\"><a class=\"anchor\" href=\"#022-023\">#</a> 0.2.2 👉 0.2.3</h2>\n<p>❗ 增加主题文件外自定义语言包的功能，<a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85\">配置戳此</a><br />\n🔧 提高低版本浏览器兼容性</p>\n<h2 id=\"021-022\"><a class=\"anchor\" href=\"#021-022\">#</a> 0.2.1 👉 0.2.2</h2>\n<p>⚠️ 弃用 <code>mediumzoom</code> ，改成 <code>fancybox</code> ，<a href=\"display/#%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%9B%B8%E5%86%8C\">配置戳此</a><br />\n💡  增加语言包： <code>繁体中文</code> 和 <code>日语</code> <br />\n💡  quiz 功能优化，根据语言显示题型标签<br />\n🔧 修复评论功能中反复初始化 leancloud-storage<br />\n🔧 修复 <code>audio: false</code>  时不能隐藏播放按钮、停止播放</p>\n<h2 id=\"02-021\"><a class=\"anchor\" href=\"#02-021\">#</a> 0.2 👉 0.2.1</h2>\n<p>⚠️ 配置文件添加  <code>loader</code>  参数，<a href=\"config/#%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB\">配置戳此</a><br />\n💡  二级 list 区别显示<br />\n🔧 修复浏览位置定位 BUG<br />\n🔧 修复 firework 动画延迟<br />\n🔧 优化评论功能</p>\n<h2 id=\"019-02\"><a class=\"anchor\" href=\"#019-02\">#</a> 0.1.9 👉 0.2</h2>\n<p>⚠️  <strong>评论功能大改</strong></p>\n<ul>\n<li>弃用不开源的 Valine，改用 MiniValine，并且进行了魔改，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">项目戳此</span><br />\n主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>\n<li>为防止泄露用户邮箱、IP 等隐私信息，弃用 QQ 号获取昵称及头像。<br />\n❗ 同时需要手动进行一些迁移，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltYWVnb28vVmFsaW5l\">具体步骤戳此</span></li>\n<li>❗ 评论相关的配置亦有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a></li>\n</ul>\n<p>⚠️ 增加单击页面烟花效果，<a href=\"config/#%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88\">配置戳此</a><br />\n💡  弃用 Velocity，改用 anime.js，方便未来添加更多<span class=\"spoiler\" title=\"你知道得太多了\">花里胡哨的</span>功能<span class=\"spoiler\" title=\"你知道得太多了\">严重拖慢页面滑行速度</span><br />\n🔧 新增多枚 icon，包括豆瓣 <code>i-douban</code>  等<br />\n🔧 一些显示问题</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "http://example.com/week-1/",
            "url": "http://example.com/week-1/",
            "title": "第1周 计算",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"读输入-字符串输出\"><a class=\"anchor\" href=\"#读输入-字符串输出\">#</a> 读输入、字符串输出</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>scanner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 让 in 这个对象做读入下一行的动作，结果交给 System.out 这个对象去打印一行。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>tips：</p>\n<ul>\n<li><code>System.out.println</code>  会换行， <code>System.out.print</code>  则不会换行</li>\n<li>出现警告： <code>Resource leak: 'in' is never closed</code> ，可以在函数的最后加入</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 释放</span></pre></td></tr></table></figure><h2 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p><strong>形式</strong>：&lt;类型名称&gt; &lt; 变量名称 &gt; = &lt; 初始值 &gt;<br />\n <code>int price, amount; // 同时定义两个变量</code> <br />\n <code>int price = 0; // 定义变量并赋值</code> <br />\n <code>int price, amount = 100, age;</code></p>\n</li>\n<li>\n<p><strong>类型名称</strong>：Java 是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>\n</li>\n<li>\n<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java 的保留字也不能用作标识符。</p>\n</li>\n<li>\n<p>Java 的保留字列表</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>do</th>\n<th>implements</th>\n<th>protected</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>import</td>\n<td>public</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>instanceof</td>\n<td>return</td>\n<td>true</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>try</td>\n</tr>\n<tr>\n<td>case</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>while</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>final</td>\n<td>long</td>\n<td>strictfp</td>\n<td>void</td>\n</tr>\n<tr>\n<td>char</td>\n<td>finally</td>\n<td>native</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>class</td>\n<td>float</td>\n<td>new</td>\n<td>switch</td>\n</tr>\n<tr>\n<td>const*</td>\n<td>for</td>\n<td>null</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>goto*</td>\n<td>package</td>\n<td>this</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>private</td>\n<td>throw</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"task-list\">\n<li>以下哪些标识符是符合规则的？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> currency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> lastName</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> fireplace</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> _last_name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\"> xingmin</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> class</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> goto</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> 4ever</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\" /><label for=\"cbx_8\"> time-machine</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\" /><label for=\"cbx_9\"> Int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\" /><label for=\"cbx_10\"> $12</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\" /><label for=\"cbx_11\"> 我是变量</label></li>\n</ul>\n<h2 id=\"常量-final\"><a class=\"anchor\" href=\"#常量-final\">#</a> 常量 final</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">AMOUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//final 是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span></pre></td></tr></table></figure><h2 id=\"变量类型\"><a class=\"anchor\" href=\"#变量类型\">#</a> 变量类型</h2>\n<h3 id=\"整数-int\"><a class=\"anchor\" href=\"#整数-int\">#</a> 整数 int</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>如果用户输入的不是整数，则会报错  <code>java.util.InputMismatchException</code> 。</li>\n<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>\n<li>每次召唤 <code>in.nextInt()</code> ，它就等待用户输入一个整数。</li>\n<li>两个整数的运算结果只能是整数。</li>\n<li>在 Java 中， <code>10</code>  和 <code>10.0</code>  是完全不同的数。</li>\n</ul>\n<h3 id=\"浮点数-double\"><a class=\"anchor\" href=\"#浮点数-double\">#</a> 浮点数 double</h3>\n<ul>\n<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.2</span><span class=\"token operator\">-</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 结果为 0.09999999999999987</span></pre></td></tr></table></figure><ul>\n<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>\n</ul>\n<h2 id=\"赋值运算\"><a class=\"anchor\" href=\"#赋值运算\">#</a> 赋值运算</h2>\n<h3 id=\"强制类型转换\"><a class=\"anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h3>\n<ul>\n<li>浮点数和整数放在一起运算时，Java 会将整数转换成浮点数，然后进行浮点数运算。</li>\n<li>强制性转换的优先级高于四则运算。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不会报错</span></pre></td></tr></table></figure><h3 id=\"运算符优先级\"><a class=\"anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<ul>\n<li>单目运算符 <code>+</code>   <code>-</code>  优先级最高</li>\n<li>结合关系一般自左向右，单目 <code>+</code>   <code>-</code>  和赋值 <code>=</code>  自右向左。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"复合赋值\"><a class=\"anchor\" href=\"#复合赋值\">#</a> 复合赋值</h3>\n<ul>\n<li>5 个算术运算符， <code>+ - * / %</code> ，可以和赋值运算符  <code>=</code>  结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token operator\">*</span> <span class=\"token operator\">=</span> sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>total <span class=\"token operator\">=</span> total<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>total <span class=\"token operator\">/=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>递增递减运算符  <code>++</code>   <code>--</code> ，给变量 + 1 或 - 1</li>\n<li>前缀后缀：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t1 <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//t1 先被赋值为 a 即 14， a 自加到 15</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>t2 <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 先自加到 15，t2 被赋值为 a 即 15</span></pre></td></tr></table></figure><h1 id=\"编程题\"><a class=\"anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-温度转换5分\"><a class=\"anchor\" href=\"#题目1-温度转换5分\">#</a> 题目 1. 温度转换（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br />\n写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p>\n<p><code>°F = (9/5)*°C + 32</code></p>\n<p>其中 C 表示摄氏温度，F 表示华氏温度。</p>\n<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>\n<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>\n<p><code>(int)x;</code></p>\n<p>其中 x 是要转换的那个浮点数。</p>\n<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br />\n一个整数。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br />\n一个整数。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br />\n 100</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br />\n 37</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">// 获得输入的整数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> fahrenheit <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 计算摄氏度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> centigrade <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token comment\">// 将浮点数转换为整数输出</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>centigrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺"
            ]
        }
    ]
}